name: Create ENV

on:
  workflow_dispatch:

jobs:

  Get-Repositories-To-Inject:
      runs-on: ubuntu-latest
      outputs:
        REPOSITORIES: ${{ steps.set-matrix.outputs.REPO }}
        OWNER: ${{ steps.set-owner.outputs.OW}}
        USER: ${{ steps.set-user.outputs.US}}
        EMAIL: ${{ steps.set-email.outputs.EM }}
      steps:
        - name: Checkout to repository
          uses: actions/checkout@v3
       
        - name: Set matrix data
          id: set-matrix
          run: echo "REPO=$(jq -c -r '.repositories | map(.repo_name)' < ./repositories.json)" >> $GITHUB_OUTPUT 

        - name: Set owner
          id: set-owner
          run: echo "OW=$(jq -r '.owner' repositories.json)" >> $GITHUB_OUTPUT 

        - name: Set user
          id: set-user
          run: echo "US=$(jq -r '.owner' repositories.json)" >> $GITHUB_OUTPUT 

        - name: Set email
          id: set-email
          run: echo "EM=$(jq -r '.owner' repositories.json)" >> $GITHUB_OUTPUT 

  create-ENV:
    runs-on: ubuntu-latest
    needs: [Get-Repositories-To-Inject]
    strategy:
        max-parallel: 1
        # SET MATRIX WITH repositories TO MIGRATE
        matrix: 
            repositorie: ${{fromJson(needs.Get-Repositories-To-Inject.outputs.REPOSITORIES)}}
    steps:
      - name: Checkout to repository
        run: echo "${{ matrix.repositorie }}"