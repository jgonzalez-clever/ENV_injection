name: Create ENV

on:
  workflow_dispatch:

jobs:

  Get-Repositories-To-Inject:
      runs-on: ubuntu-latest
      outputs:
        REPOSITORIES: ${{ steps.set-matrix.outputs.REPO }}
        OWNER: ${{ steps.set-owner.outputs.OW}}
        USER: ${{ steps.set-user.outputs.US}}
        EMAIL: ${{ steps.set-email.outputs.EM }}
      steps:
        - name: Checkout to repository
          uses: actions/checkout@v3
       
        - name: Set matrix data
          id: set-matrix
          run: echo "REPO=$(jq -c -r '.repositories | map(.repo_name)' < ./repositories.json)" >> $GITHUB_OUTPUT 

        - name: Set owner
          id: set-owner
          run: echo "OW=$(jq -r '.owner' repositories.json)" >> $GITHUB_OUTPUT 

        - name: Set user
          id: set-user
          run: echo "US=$(jq -r '.owner' repositories.json)" >> $GITHUB_OUTPUT 

        - name: Set email
          id: set-email
          run: echo "EM=$(jq -r '.owner' repositories.json)" >> $GITHUB_OUTPUT 

  create-ENV:
    runs-on: ubuntu-latest
    needs: [Get-Repositories-To-Inject]
    strategy:
        max-parallel: 1
        # SET MATRIX WITH repositories TO MIGRATE
        matrix: 
            repositorie: ${{fromJson(needs.Get-Repositories-To-Inject.outputs.REPOSITORIES)}}
    steps:
      - name: Checkout to repository
        run: echo "${{ matrix.repositorie }}"

      - name: Actualizar entornos
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          OWNER: ${{ needs.Get-Repositories-To-Inject.outputs.OWNER }}
        run: |
          curl -L \
          -X PUT \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ env.GH_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/jgonzalez-clever/${{ matrix.repositorie }}/environments/test1 \
          -d '{
            "wait_timer": 30,
            "prevent_self_review": false,
            "reviewers": [
              {
                "type": "User",
                "id": 1
              },
              {
                "type": "Team",
                "id": 1
              }
            ],
            "deployment_branch_policy": {
              "protected_branches": false,
              "custom_branch_policies": true
            }
          }'